@model FamilyRegistration.ViewModels.AddChildrenViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles
{
    <link href="~/Content/date-picker/bootstrap-datepicker.css" rel="stylesheet" />
}

<div class="auth-box register">
    <div class="content">
        @if (!ViewData.ModelState.IsValid)
        {
            string messages = string.Join(", ", ViewData.ModelState.Values
                                        .SelectMany(x => x.Errors)
                                        .Select(x => x.ErrorMessage));
            <div class="alert alert-danger alert-dismissible required-alert" style="margin-top: 5px;" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
                <i class="fa fa-times-circle"></i> <b>Invalid</b> @messages
            </div>
        }
        <div class="alert alert-danger alert-dismissible hidden required-alert" style="margin-top: 5px;" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
            <i class="fa fa-times-circle"></i> <b>Required</b> Hey, each child needs a name and birthdate to be successfully added. Thanks!
        </div>
        <div class="alert alert-danger alert-dismissible hidden release-alert" style="margin-top: 5px;" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
            <i class="fa fa-times-circle"></i> <b>Required</b> Unfortunately, we cannot accept your children without you accepting our terms and conditions agreement we have listed below.
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
                    <div class="panel panel-default">
                        <div class="panel-heading" role="tab" id="headingOne">
                            <h4 class="panel-title">
                                <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                                    @Model.AddChildrenModel.Adult.FamilyName (@Model.ExistingFamilyMembers.Count)
                                </a>
                            </h4>
                        </div>
                        <div id="collapseOne" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingOne">
                            <div class="panel-body">
                                <table class="table table-bordered">
                                    @foreach (var member in Model.ExistingFamilyMembers)
                                    {
                                        <tr>
                                            <td>@member.FirstName @member.LastName</td>
                                            <td>@member.FamilyMemberRole</td>
                                        </tr>
                                    }
                                </table>    
                            </div>
                        </div>
                    </div>
                    </div>
                </div>
        </div>
        <div id="loading" class="hidden text-center">
            <i class="fa fa-spinner fa-spin fa-3x"></i>
            <p>Hey, we're adding members to your family essentially from scratch and it's a lot of work. Give us a moment, would ya?</p>
        </div>
        @using (Html.BeginForm("AddChildren", "Home", FormMethod.Post, new { @class = "form-auth-small" }))
        {
            <div class="separator-linethrough"><span>ADDITIONAL CHILD FAMILY MEMBERS</span></div>
            <div id="children">
                @Html.HiddenFor(m => m.AddChildrenModel.Adult.FamilyId)
                @Html.HiddenFor(m => m.AddChildrenModel.Adult.PersonId)
                @Html.HiddenFor(m => m.AddChildrenModel.Adult.FamilyName)
                @for (int i = 0; i < Model.AddChildrenModel.Children.Count; i++)
                {
                    <div class="form-group child-@i">
                        <input type="hidden" name="AddChildrenModel.Children.Index" value="@i" />
                        <div class="row">
                            <div class="col-md-3 minimize-col-padding">
                                @Html.TextBoxFor(m => m.AddChildrenModel.Children[i].FirstName, new { @class = "form-control input-lg", @placeholder = "First Name", @required = "required" })
                            </div>
                            <div class="col-md-3 minimize-col-padding">
                                @Html.TextBoxFor(m => m.AddChildrenModel.Children[i].LastName, new { @class = "form-control input-lg", @placeholder = "Last Name", @required = "required" })
                            </div>
                            <div class="col-md-2 minimize-col-padding">
                                @Html.TextBoxFor(m => m.AddChildrenModel.Children[i].BirthDate, new { @class = "form-control input-lg", @placeholder = "Birthdate", @required = "required", @data_provide = "datepicker", @data_date_autoclose = "true", @Value = "" })
                            </div>
                            <div class="col-md-2 minimize-col-padding">
                                @Html.DropDownListFor(m => m.AddChildrenModel.Children[i].Grade, Model.Grades, new { @class = "form-control input-lg", @placeholder = "Grade", @required = "required" })
                            </div>
                            <div class="col-md-2 minimize-col-padding">
                                @Html.DropDownListFor(m => m.AddChildrenModel.Children[i].Gender, Model.Genders, new { @class = "form-control input-lg", @placeholder = "Gender", @required = "required" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group child-@i">
                        <div class="row">
                            <div class="col-md-11">
                                @Html.TextBoxFor(m => m.AddChildrenModel.Children[i].MedicalInformation, new { @class = "form-control input-lg", @placeholder = "Medical Information (Allergies, Medication Needed, etc...)" })
                            </div>
                            <div class="col-md-1 minimize-col-padding">
                                <button data-child="@i" class="btn btn-lg btn-block remove-child-button" style="padding: 10px 20px; margin-top: 0px"><i class="fa fa-trash"></i></button>
                            </div>
                        </div>
                    </div>
                }

            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-12">
                        <label class="fancy-checkbox custom-bgcolor-green">
                            <input type="checkbox" name="release" id="release" required><span> <i>In the event of an emergency, I authorize first aid or medical treatment for this child, and I release Northeast Christian Church from any and all responsibility in connection therewith. Furthermore, I authorize my child's photo/video to be taken and used and/or used by NECC.</i></span>
                        </label>
                    </div>
                </div>
            </div>

            <button class="btn btn-neutral btn-lg btn-block add-child-button">Add Child</button>
                    <button type="button" id="form-submit-button" class="btn btn-success btn-lg btn-block" style="margin-top: 15px">FINISHED</button>
        }
        <div class="bottom text-center margin-top-30">
            <span class="helper-text">Make a wrong turn? <a href="@Url.Action("Index")">Go Back</a></span>
        </div>
    </div>
</div>

@section Scripts
{
    <script src="~/Scripts/bootstrap-datepicker.min.js"></script>
    <script type="text/javascript">
        $(function () {
            $('.inline-datepicker').datepicker({
                todayHighlight: true
            });
        });

        var index = 1;

        $('.add-child-button').click(function (e) {
            e.preventDefault();
            var str = '<div class="form-group child-index"><input type="hidden" name="AddChildrenModel.Children.Index" value="index" />'
                + '<div class="row"><div class="col-md-3 minimize-col-padding"><input class="form-control input-lg" id="AddChildrenModel_Children_index__FirstName" name="AddChildrenModel.Children[index].FirstName" placeholder="First Name" type="text" value="" required="required"> </div>'
                + '<div class="col-md-3 minimize-col-padding"><input class="form-control input-lg" id="AddChildrenModel_Children_index__LastName" name="AddChildrenModel.Children[index].LastName" placeholder="Last Name" type="text" value="" required="required"> </div>'
                + '<div class="col-md-2 minimize-col-padding"><input value="" class="form-control input-lg" data-date-autoclose="true" data-provide="datepicker" data-val="true" data-val-date="The field BirthDate must be a date." data-val-required="The BirthDate field is required." id="AddChildrenModel_Children_index__BirthDate" name="AddChildrenModel.Children[index].BirthDate" placeholder="Birthdate" required="required" type="text"></div>'
                + '<div class="col-md-2 minimize-col-padding"><select class="form-control input-lg" id= "AddChildrenModel_Children_index__Grade" name= "AddChildrenModel.Children[index].Grade" placeholder= "Grade" required= "required" > <option value="Pre-K">Pre-K</option>'
                + ' <option value="Kindergarten">K</option>'
                + ' <option value="1st">1st</option>'
                + ' <option value="2nd">2nd</option>'
                + ' <option value="3rd">3rd</option>'
                + ' <option value="4th">4th</option>'
                + ' <option value="5th">5th</option>'
                + ' <option value="6th">6th</option>'
                + ' <option value="7th">7th</option>'
                + ' <option value="8th">8th</option>'
                + ' <option value="9th">9th</option>'
                + ' <option value="10th">10th</option>'
                + ' <option value="11th">11th</option>'
                + ' <option value="12th">12th</option>'
                + ' <option value="N/A">N/A</option></select></div>'
                + '<div class="col-md-2 minimize-col-padding"><select class="form-control input-lg" id= "AddChildrenModel_Children_index__Gender" name= "AddChildrenModel.Children[index].Gender" placeholder= "Gender" required= "required" > <option value="Male">Male</option><option value="Female">Female</option></select></div></div></div>'
                + '<div class="form-group child-index"><div class="row">'
                + '<div class="col-md-11"><input class="form-control input-lg" id="AddChildrenModel_Children_index__MedicalInformation" name="AddChildrenModel.Children[index].MedicalInformation" placeholder="Medical Information (Allergies, Medication Needed, etc...)" type="text" value=""></div>'
                + '<div class="col-md-1 minimize-col-padding" > <button data-child="index" class="btn btn-lg btn-block remove-child-button" style="padding: 10px 20px; margin-top: 0px"><i class="fa fa-trash" /></button></div ></div ></div >';
            str = str.replace(/index/g, index);

            $('#children').append(str);
            $('.inline-datepicker').datepicker({
                todayHighlight: true
            });
            index = index + 1;
        });

        $(document).on('click', '.remove-child-button', function (e) {
            e.preventDefault();
            var thisIndex = $(this).data("child");
            $('.child-' + thisIndex).remove();

            if ($("form input.input-required[type='text'").length == 0) {
                $(".required-alert").addClass("hidden");
            }
        });

        $(document).on('blur', 'form :input[required]', function (e) {
            if ($(this).hasClass("input-required")) {
                if ($.trim($(this).val()).length > 0) { $(this).removeClass("input-required"); }
                if ($("form input.input-required[type='text'").length == 0) {
                    $(".required-alert").addClass("hidden");
                }
            }
        });

        $("#release").click(function () {
            if ($("#release").is(':checked'))
            {
                $(".release-alert").addClass("hidden");
            }
            else
            {
                $(".release-alert").removeClass("hidden");
            }
        });

        $("#form-submit-button").click(function () {

            $("#form-submit-button").prop("disabled", true);

            // Remove all redborders
            $("form :input.input-required").removeClass("input-required");
            // Check all required fields have text, you can even check other values
            $("form :input[required]").each(function () {
                if ($(this).is(':checkbox'))
                {
                    if (!$(this).is(':checked'))
                    {
                        $(this).addClass("input-required");
                    }
                }
                else
                {
                    if ($.trim($(this).val()) == "") { $(this).addClass("input-required"); }
                }

            });
            // If any input has a red border, return
            if ($("form .input-required").length > 0) {
                $("#form-submit-button").prop("disabled", false);

                if ($("form input.input-required[type='text'").length > 0)
                {
                    $(".required-alert").removeClass("hidden");
                }

                if ($("form input.input-required[type='checkbox'").length > 0) {
                    $(".release-alert").removeClass("hidden");
                }
                return;
            }

            $(".release-alert").addClass("hidden");
            $(".required-alert").addClass("hidden");
            //hide everything before we submit
            $('.form-auth-small').addClass("hidden");
            $('#loading').removeClass("hidden");
            $('#form-submit-button').addClass("disabled");
            $('.add-child-button').addClass("disabled");
            $('form').submit();
        });

    </script>
}